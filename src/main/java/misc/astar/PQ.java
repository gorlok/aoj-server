package misc.astar;import java.util.Vector;public class PQ {    Vector<Node> q = new Vector<Node>();        public Node pop() {        Node node = this.q.elementAt(0);        this.q.removeElement(node);        return node;    }        public void add(Node node) {        if(this.q.size() == 0) {            this.q.addElement(node);        } else {            int i;            for(i = 0; i < this.q.size(); i++) {                Node holder = this.q.elementAt(i);                if(holder.totalCost >= node.totalCost) {                    this.q.insertElementAt(node, i);                    break;                }            }            if(i == this.q.size()) {                this.q.addElement(node);            }        }    }        public boolean contains(Node node) {        return this.q.contains(node);    }        public void remove(Node node) {        this.q.removeElement(node);    }        public int size() {        return this.q.size();    }}    